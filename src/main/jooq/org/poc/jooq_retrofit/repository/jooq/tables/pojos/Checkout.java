/*
 * This file is generated by jOOQ.
 */
package org.poc.jooq_retrofit.repository.jooq.tables.pojos;

import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Checkout implements Serializable {

  private static final long serialVersionUID = 1L;

  private final UUID id;
  private final String description;
  private final String status;
  private final OffsetDateTime created;
  private final OffsetDateTime updated;

  public Checkout(Checkout value) {
    this.id = value.id;
    this.description = value.description;
    this.status = value.status;
    this.created = value.created;
    this.updated = value.updated;
  }

  public Checkout(
      UUID id, String description, String status, OffsetDateTime created, OffsetDateTime updated) {
    this.id = id;
    this.description = description;
    this.status = status;
    this.created = created;
    this.updated = updated;
  }

  /** Getter for <code>public.checkout.id</code>. */
  public UUID getId() {
    return this.id;
  }

  /** Getter for <code>public.checkout.description</code>. */
  public String getDescription() {
    return this.description;
  }

  /** Getter for <code>public.checkout.status</code>. */
  public String getStatus() {
    return this.status;
  }

  /** Getter for <code>public.checkout.created</code>. */
  public OffsetDateTime getCreated() {
    return this.created;
  }

  /** Getter for <code>public.checkout.updated</code>. */
  public OffsetDateTime getUpdated() {
    return this.updated;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) return true;
    if (obj == null) return false;
    if (getClass() != obj.getClass()) return false;
    final Checkout other = (Checkout) obj;
    if (this.id == null) {
      if (other.id != null) return false;
    } else if (!this.id.equals(other.id)) return false;
    if (this.description == null) {
      if (other.description != null) return false;
    } else if (!this.description.equals(other.description)) return false;
    if (this.status == null) {
      if (other.status != null) return false;
    } else if (!this.status.equals(other.status)) return false;
    if (this.created == null) {
      if (other.created != null) return false;
    } else if (!this.created.equals(other.created)) return false;
    if (this.updated == null) {
      if (other.updated != null) return false;
    } else if (!this.updated.equals(other.updated)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
    result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
    result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
    result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
    result = prime * result + ((this.updated == null) ? 0 : this.updated.hashCode());
    return result;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Checkout (");

    sb.append(id);
    sb.append(", ").append(description);
    sb.append(", ").append(status);
    sb.append(", ").append(created);
    sb.append(", ").append(updated);

    sb.append(")");
    return sb.toString();
  }
}
